import gradio as gr
import random
import json
from llama_cpp import Llama
import sys
import os

# --- 설정값 불러오기 ---
sys.path.append(os.path.dirname(os.path.dirname(__file__)))
sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), "..", "dataset")))
from config import save_dir_merged
from data_generator import generate_screen_json

GGUF_MODEL_PATH = os.path.join(save_dir_merged, "model.gguf")
MAX_TOKENS = 256

# llama 모델 로드
llm = Llama(model_path=GGUF_MODEL_PATH, n_ctx=2048, n_threads=8)

# 미리 정의된 스크린 예제

screens = [
    "{\n  \"hero:top\": \"btn:\\\"광고|더 보기\\\"\",\n  \"list:mid\": [\n    \"\\\"TVING | 티빙\\\"\",\n    \"[\\\"환상적인 여정\\\"]: btn:\\\"노 리사이클\\\",btn:\\\"브로드캐스트\\\",btn:\\\"하라키리\\\",btn:\\\"안녕하세요\\\"\"\n  ],\n  \"tabs:mid\": [\n    \"\\\"추천\\\",\\\"라이브\\\",\\\"앱스\\\"\"\n  ],\n  \"apps:btm\": \"\\\"SmartThings\\\",\\\"삼성 TV Plus\\\",\\\"Netflix\\\",\\\"Prime Video\\\",\\\"YouTube\\\",\\\"TVING | 티빙\\\",\\\"왓챠 | Watcha\\\",\\\"wavve\\\",\\\"Bixby\\\",\\\"Internet\\\",\\\"home_i_icon_app_edit.svg\\\"\",\n  \"list:btm\": [\n    \"\\\"TVING | 티빙\\\"\"\n  ],\n  \"tb:left\": [\n    \"\\\"home_i_icon_mode_search.svg\\\",\\\"lifestyle_home_i_mode_art.svg\\\",\\\"home_i_icon_mode_lifeplus_normal.svg\\\",\\\"home_i_icon_mode_game_normal.svg\\\",\\\"home_i_icon_mode_home_selected.svg\\\",\\\"home_i_icon_system_settings.svg\\\",\\\"home_i_icon_system_privacy_24.svg\\\"\"\n  ]\n}",
    "{\n  \"list:top\": [\n    \"\\\"극세 필터 청소가 필요합니다. 필터를 청소하여 안정적인 성능을 유지해 보세요.\\\"\",\n    \"btn:\\\"자세히 보기\\\",btn:\\\"닫기\\\"\",\n    \"\\\"i_img_pagination_nf.json\\\",\\\"i_img_pagination_nf.json\\\",\\\"i_img_pagination_nf.json\\\"\",\n    \"\\\"대시보드 | 마이 홈\\\"\",\n    \"\\\"cloudy?platform=summary\\\",\\\"73 °F\\\",\\\"1?platform=summary\\\",\\\"좋음\\\"\"\n  ],\n  \"list:mid\": [\n    \"btn:\\\"내 폰 울리기\\\"\",\n    \"btn:\\\"오프라인|기기 2개\\\",btn:\\\"Home Care|알림 2개\\\",btn:\\\"default?platform=summary|Energy|15.27 kWh\\\"\",\n    \"\\\"즐겨찾기\\\"\",\n    \"btn:\\\"거실|공기청정기|자동풍\\\"\"\n  ],\n  \"list:btm\": [\n    \"btn:\\\"체험존|체험존에서 SmartThings 사용 방법을 확인해 보세요.|Addition\\\",btn:\\\"SmartThings 허브(매터 지원)|매터 표준을 지원하는 SmartThings 허브로 폭넓은 IoT 경험을 제공합니다.\\\"\",\n    \"btn:\\\"맵뷰|TV의 대화면에서 집안의 기기와 유용한 정보를 한번에 확인해 보세요\\\",btn:\\\"빅스비 음성 제어|언제든지 빅스비를 통해 집안 상태를 확인하고 기기를 제어할 수 있습니다.\\\"\"\n  ],\n  \"tb:left\": [\n    \"\\\"st_main_menulogo_close.svg\\\",\\\"st_main_menuicon_home_sel.svg\\\",\\\"st_main_menuicon_devices_n.svg\\\",\\\"st_main_menuicon_life_n.svg\\\",\\\"st_main_menuicon_routine_n.svg\\\",\\\"st_main_menuicon_adddevice_n.svg\\\",\\\"[homemenu]resize_profile_skjcwbfpdc.jpg\\\",\\\"st_main_menuicon_settings_n.svg\\\"\"\n  ]\n}",
    "{\n  \"list:top\": [\n    \"btn:\\\"환영합니다.|바로 오늘! 아트 스토어를 체험해보세요.\\\"\"\n  ],\n  \"list:mid\": [\n    \"[\\\"내 아트 스토어\\\"]: \\\"나의 사진\\\",\\\"즐겨찾기\\\",\\\"멤버십\\\"\",\n    \"\\\"최근 감상\\\"\"\n  ],\n  \"list:btm\": [\n    \"btn:\\\"1521382429sam-s10002099_20250224052915.jpg\\\"\",\n    \"\\\"TextBox\\\"\",\n    \"\\\"TextBox\\\"\"\n  ],\n  \"tb:left\": [\n    \"\\\"home_i_icon_mode_search.svg\\\",\\\"home_i_icon_mode_art_selected.svg\\\",\\\"home_i_icon_mode_lifeplus_normal.svg\\\",\\\"home_i_icon_mode_game_normal.svg\\\",\\\"home_i_icon_mode_home_normal.svg\\\",\\\"home_i_icon_system_settings.svg\\\",\\\"home_i_icon_system_privacy_24.svg\\\"\"\n  ]\n}",
]

# llama 요약 호출 함수
def summarize(screen_json):
    prompt = f"다음 화면 JSON을 요약해줘 (한국어):\n{screen_json}"
    output = llm(prompt, max_tokens=MAX_TOKENS)
    return output["choices"][0]["text"].strip()

# 인풋 생성 로직
def handle_input(mode, screen_index, use_korean):
    if mode == "예시에서 선택":
        return screens[screen_index]
    elif mode == "랜덤 생성":
        generated = generate_screen_json(use_korean)
        return json.dumps(generated, ensure_ascii=False, indent=2)
    else:
        return "입력 방식을 선택해 주세요."

# Gradio UI
with gr.Blocks() as demo:
    gr.Markdown("## 🧠 화면 JSON 요약기")
    gr.Markdown("화면 JSON을 선택하거나 직접 편집하여 요약 결과를 확인하세요.")

    with gr.Row():
        mode = gr.Radio(
            ["랜덤 생성", "예시에서 선택"],
            label="입력 방식",
            value="랜덤 생성"
        )
        use_korean = gr.Checkbox(label="한국어 랜덤 생성", value=True)

    screen_index = gr.Slider(
        minimum=0,
        maximum=len(screens) - 1,
        step=1,
        value=0,
        label="예시 인덱스",
        visible=True
    )

    generate_button = gr.Button("📥 인풋 생성하기")
    input_json = gr.Textbox(label="📥 사용될 인풋", lines=15)

    screen_index.change(
        fn=lambda i: screens[i],
        inputs=screen_index,
        outputs=input_json
    )

    generate_button.click(
        fn=handle_input,
        inputs=[mode, screen_index, use_korean],
        outputs=input_json
    )

    summarize_button = gr.Button("🧠 요약 실행")
    output_text = gr.Textbox(label="📤 요약 결과", lines=15)

    summarize_button.click(
        fn=summarize,
        inputs=input_json,
        outputs=output_text
    )

# 서버 실행
if __name__ == "__main__":
    demo.launch(server_name="0.0.0.0", server_port=7861, auth=("admin", "1234"))
