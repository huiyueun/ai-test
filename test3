import gradio as gr
import random
import json
from llama_cpp import Llama
import sys
import os

# --- 설정값 불러오기 ---
sys.path.append(os.path.dirname(os.path.dirname(__file__)))
sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), "..", "dataset")))
from config import save_dir_merged
from data_generator import generate_screen_json

GGUF_MODEL_PATH = os.path.join(save_dir_merged, "model.gguf")
MAX_TOKENS = 256

# llama 모델 로드
llm = Llama(model_path=GGUF_MODEL_PATH, n_ctx=2048, n_threads=8)

# 미리 정의된 스크린 예제
screens = [
    # 사용자 제공한 JSON 예시 3개를 여기에 그대로 삽입
    # 생략 가능 — 실제 사용 시는 그대로 복사
    # 예시:
    """{
      "hero:top": "btn:\"광고|더 보기\"",
      "list:mid": [
        "\"TVING | 티빙\"",
        "[\"환상적인 여정\"]: btn:\"노 리사이클\",btn:\"브로드캐스트\",btn:\"하라키리\",btn:\"안녕하세요\""
      ],
      "tabs:mid": [
        "\"추천\",\"라이브\",\"앱스\""
      ],
      "apps:btm": "\"SmartThings\",\"삼성 TV Plus\",\"Netflix\",\"Prime Video\",\"YouTube\",\"TVING | 티빙\",\"왓챠 | Watcha\",\"wavve\",\"Bixby\",\"Internet\",\"home_i_icon_app_edit.svg\"",
      "list:btm": [
        "\"TVING | 티빙\""
      ],
      "tb:left": [
        "\"home_i_icon_mode_search.svg\",\"lifestyle_home_i_mode_art.svg\",\"home_i_icon_mode_lifeplus_normal.svg\",\"home_i_icon_mode_game_normal.svg\",\"home_i_icon_mode_home_selected.svg\",\"home_i_icon_system_settings.svg\",\"home_i_icon_system_privacy_24.svg\""
      ]
    }""",
    # 나머지 2개도 그대로 이어 붙이기
]

# llama 요약 호출 함수
def summarize(screen_json):
    prompt = f"다음 화면 JSON을 요약해줘 (한국어):\n{screen_json}"
    output = llm(prompt, max_tokens=MAX_TOKENS)
    return output["choices"][0]["text"].strip()

# 인풋 생성 로직
def handle_input(mode, screen_index, use_korean):
    if mode == "예시에서 선택":
        return screens[screen_index]
    elif mode == "랜덤 생성":
        generated = generate_screen_json(use_korean)
        return json.dumps(generated, ensure_ascii=False, indent=2)
    else:
        return "입력 방식을 선택해 주세요."

# Gradio UI
with gr.Blocks() as demo:
    gr.Markdown("## 🧠 화면 JSON 요약기")
    gr.Markdown("화면 JSON을 선택하거나 직접 편집하여 요약 결과를 확인하세요.")

    with gr.Row():
        mode = gr.Radio(
            ["예시에서 선택", "랜덤 생성"],
            label="입력 방식",
            value="예시에서 선택"
        )
        use_korean = gr.Checkbox(label="한국어 랜덤 생성", value=True)

    screen_index = gr.Slider(
        minimum=0,
        maximum=len(screens) - 1,
        step=1,
        value=0,
        label="예시 인덱스",
        visible=True
    )

    input_json = gr.Textbox(label="📥 사용될 인풋", lines=15)

    screen_index.change(
        fn=lambda i: screens[i],
        inputs=screen_index,
        outputs=input_json
    )

    generate_button = gr.Button("📥 인풋 생성하기")
    generate_button.click(
        fn=handle_input,
        inputs=[mode, screen_index, use_korean],
        outputs=input_json
    )

    summarize_button = gr.Button("🧠 요약 실행")
    output_text = gr.Textbox(label="📤 요약 결과", lines=15)

    summarize_button.click(
        fn=summarize,
        inputs=input_json,
        outputs=output_text
    )

# 서버 실행
if __name__ == "__main__":
    demo.launch(server_name="0.0.0.0", server_port=7861, auth=("admin", "1234"))
