// highlight-overlay-manager.h
#ifndef DALI_TOOLKIT_HIGHLIGHT_OVERLAY_MANAGER_H
#define DALI_TOOLKIT_HIGHLIGHT_OVERLAY_MANAGER_H

#include <dali/public-api/actors/actor.h>
#include <dali/public-api/math/rect.h>
#include <dali-scene3d/public-api/controls/scene-view/scene-view.h>
#include <dali/public-api/object/weak-handle.h>

namespace Dali::Toolkit::DevelControl
{

enum class OverlayHighlightMode : uint32_t
{
  Auto = 0,
  Manual
};

class HighlightOverlayManager
{
public:
  HighlightOverlayManager();

  void SetCustomHighlight(Vector2 position, Vector2 size);
  void ResetCustomHighlight();

  void UpdateOverlay(Dali::Actor& activeHighlight);
  void HideOverlay();

  void SetOverlayMode(OverlayHighlightMode mode);
  OverlayHighlightMode GetOverlayMode() const;

private:
  std::tuple<Scene3D::SceneView, bool> FindParentSceneView(Dali::Actor current);
  void CreateOverlay(Scene3D::SceneView sceneView);
  void UpdateOverlayPosition(Scene3D::SceneView sceneView, Dali::Actor& previousHighlight);
  Rect<float> GetOverlayExtents(Scene3D::SceneView sceneView, Dali::Actor& highlight, Dali::Actor& overlay);

private:
  OverlayHighlightMode           mOverlayMode;
  Vector2                        mManualPosition;
  Vector2                        mManualSize;
  Dali::WeakHandle<Dali::Actor>  mOverlayActor;
};

} // namespace Dali::Toolkit::DevelControl

#endif // DALI_TOOLKIT_HIGHLIGHT_OVERLAY_MANAGER_H
